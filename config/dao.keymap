/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    #include "keys_uni_override.h"

    behaviors {
        home_mods_l: home_mods_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MODS_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 9 8 10 11 23 18 19 20 21 22 30 31 32 33 34 41 34 35 36 38 39 40>;
        };

        home_mods_r: home_mods_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MODS_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 41 38 39 37>;
        };

        quotes: quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTES";
            bindings = <&kp BSLH>, <&kp GRAVE>;

            #binding-cells = <0>;
        };

        semicolon_colon: semicolon_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "SEMICOLON_COLON";
            bindings = <&kp UNI_SEMICOLON>, <&kp UNI_COLON>;

            #binding-cells = <0>;
        };

        slashes: slashes {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASHES";
            #binding-cells = <0>;
            bindings = <&kp LS(BSLH)>, <&kp LS(SEMI)>, <&kp LS(SINGLE_QUOTE)>;
        };
    };

    macros {
        hashrocket: hashrocket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "HASHROCKET";
        };

        change_lang: change_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F13 &kp F16>;
            label = "CHANGE_LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp Q                 &kp W                    &kp E                        &kp R                      &kp T          &kp Y              &kp U                       &kp I                     &kp O                    &kp P                         &kp LBKT
&kp RBKT      &home_mods_l LCTRL A  &home_mods_l LEFT_ALT S  &home_mods_l LEFT_COMMAND D  &home_mods_l LEFT_SHIFT F  &kp G          &kp H              &home_mods_r RIGHT_SHIFT J  &home_mods_r RIGHT_GUI K  &home_mods_r LEFT_ALT L  &home_mods_r RCTRL SEMICOLON  &kp SINGLE_QUOTE
&change_lang  &kp Z                 &kp X                    &kp C                        &kp V                      &kp B          &kp N              &kp M                       &kp COMMA                 &kp DOT                  &kp SLASH                     &quotes
                                                             &lt RSE TAB                  &kp SPACE                  &lt LWR ENTER  &lt LWR BACKSPACE  &kp SPACE                   &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&none      &kp KP_N7  &kp KP_N8  &kp KP_N9    &none      &none   &slashes          &kp LS(RA(LEFT_BRACKET))  &kp LS(RA(RIGHT_BRACKET))  &kp EXCL      &kp PERCENT   &none
&kp PLUS   &kp KP_N4  &kp KP_N5  &kp KP_N6    &none      &none   &kp AT            &kp RA(LEFT_BRACKET)      &kp RA(RIGHT_BRACKET)      &kp QUESTION  &kp ASTERISK  &kp MINUS
&kp EQUAL  &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_N0  &none   &semicolon_colon  &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS      &hashrocket   &kp HASH      &kp RA(NON_US_BACKSLASH)
                                 &lt ADJ TAB  &trans     &trans  &trans            &trans                    &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&none      &kp F7  &kp F8  &kp F9  &kp F10  &kp C_VOL_UP  &kp C_BRIGHTNESS_INC  &kp HOME        &kp PG_UP  &none      &none    &kp CLCK
&kp EQUAL  &kp F4  &kp F5  &kp F6  &kp F11  &kp C_MUTE    &kp LEFT_ARROW        &kp DOWN_ARROW  &kp UP     &kp RIGHT  &kp INS  &none
&none      &kp F1  &kp F2  &kp F3  &kp F12  &kp C_VOL_DN  &kp C_BRIGHTNESS_DEC  &kp END         &kp PG_DN  &none      &none    &none
                           &trans  &trans   &lt ADJ RET   &lt ADJ ESC           &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
